<!-- Navigation -->
	
	<!-- Background Gradients-->
	<div  class="site-gradients">
		<div class="site-gradients-media">
			<figure>
				<img src="Another%20Yosemite%20short%20movie%20project%20%E2%80%93%20Modern_files/PcLGXNjMTdiFVKTrElCl__DSC2245.jpg" alt="PcLGXNjMTdiFVKTrElCl__DSC2245" srcset="https://themedemos.webmandesign.eu/modern/wp-content/uploads/sites/8/2014/11/PcLGXNjMTdiFVKTrElCl__DSC2245.jpg 1920w, https://themedemos.webmandesign.eu/modern/wp-content/uploads/sites/8/2014/11/PcLGXNjMTdiFVKTrElCl__DSC2245-420x280.jpg 420w, https://themedemos.webmandesign.eu/modern/wp-content/uploads/sites/8/2014/11/PcLGXNjMTdiFVKTrElCl__DSC2245-744x497.jpg 744w, https://themedemos.webmandesign.eu/modern/wp-content/uploads/sites/8/2014/11/PcLGXNjMTdiFVKTrElCl__DSC2245-1200x801.jpg 1200w" sizes="(max-width: 1617px) 100vw, 1617px" height="1080" width="1617">
			</figure>
		</div>
	</div>

	<header class="container">
		<div class="site-branding">
			<h1 class="site-title">
				<a href="/index/index">
					<span>Justice</span>
				</a>
			</h1>
			<h2 class="site-description">Welcome to Us !</h2>
		</div>
	</header>
	
	<!-- /////////////////////////////////////////Content -->
	<div id="page-content" class="single-page">
		<div class="container">
			<div class="row">
				<div id="main-content">
					<article>
						<img src="/images/banner1.jpg" />
						<div class="art-content">
							<h1>swoole基础-与传统MVC框架的整合</h1>
                        <div class="info">By <a href="#">夕夜</a> 11 4, 2017 </div>
                            <p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">最近很多人私下留言给我，问swoole与yii2怎么整合？</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">由于yii2本身就是传统MVC框架的典型代表之一，所以这个问题又可以等同于swoole如何与传统的MVC框架整合，比如laravel\tp等。本文我们就以yii2为例，来简述下在传统MVC框架下是怎么运用swoole的。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">我们在去年12月份讲yii2的console知识点的时候，提过swoole。没错，我们可以用yii2自带的console来配和操作swoole。明明很简单，你们却告诉我你不会，我总结一下可能有下面这些原因：</p><ul style="color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;"><li>命名空间的问题</li><li>日志的使用问题</li><li>热重启的问题</li></ul><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">如果还有其他我们没有谈到的问题，评论下方留言。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">下面我们就这三个问题，来分别谈谈swoole与yii2的那些事。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;"><span style="font-weight: 700;">命名空间的问题</span></p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">前面我们介绍的swoole，基本上都很贴近原生，当然我们也没有引入过命名空间。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">但是在yii2的console中，有命名空间的存在，所以，在实例化swoole_server等相关的对象时，我们就需要在这些扩展对象的前面添加反斜杠"\"，这也是很多基础薄弱的同学不明白为啥在yii2中new swoole_server等对象的时候报undefined 错误了。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">比如我们这样写</p><pre class="hljs coffeescript" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">new</span> Swoole\Server(<span class="hljs-string" style="color: rgb(230, 219, 116);">'127.0.0.1'</span>, <span class="hljs-number" style="color: rgb(174, 129, 255);">9501</span>);</pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">就会抛出一个Fatal error：Class 'console\controllers\Swoole\Server' not found，这便是命名空间所引起的问题，如何避免这个问题呢？像我们上面说的，只需要在swoole对象的前面添加一个反斜杠即可。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">比如像下面这样写就没问题</p><pre class="hljs coffeescript" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">new</span> \Swoole\Server(<span class="hljs-string" style="color: rgb(230, 219, 116);">'127.0.0.1'</span>, <span class="hljs-number" style="color: rgb(174, 129, 255);">9501</span>);</pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;"><span style="font-weight: 700;">日志的使用问题</span></p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">在yii2中，平时我们在业务逻辑中做一些日志追踪，记录等操作，都来源于对yii\log\Logger类的操作。这个类很特殊，怎么个特殊法呢？且听我慢慢道来。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">以文件存储日志为前提，在脚本运行时记录的日志信息并没有在脚本运行到记录的那行代码就把日志写到你的文件内，当脚本运行到记录的那行代码时，这些信息只是被暂时性的写入到内存，等脚本完全结束的时候，才最终把这些日志统一一次性输出到文件系统中。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">这就很明显突出日志管理同swoole的矛盾了。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">swoole是常驻内存的，除非遇到一致致命的错误，或者其他非正常中断时，脚本才会执行完毕，所以在swoole程序正常运行时，你所记录的日志并没有正常的记录到文件内。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">有些人可能还不明白，说的啥，听不懂。我们看一个例子</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">首先我们在console\config\main.php配置文件配置log组件</p><pre class="hljs php" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);"><p><span class="hljs-string" style="color: rgb(230, 219, 116);">'components'</span> =&gt; [</p><p><span class="hljs-string" style="color: rgb(230, 219, 116);"> &nbsp; &nbsp; 'log'</span> =&gt; [</p><p><span class="hljs-string" style="color: rgb(230, 219, 116);"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'targets'</span> =&gt; [</p><p>[</p><p><span class="hljs-string" style="color: rgb(230, 219, 116);">'class'</span> =&gt; <span class="hljs-string" style="color: rgb(230, 219, 116);">'yii\log\FileTarget'</span>,</p><p><span class="hljs-string" style="color: rgb(230, 219, 116);">'levels'</span> =&gt; [<span class="hljs-string" style="color: rgb(230, 219, 116);">'error'</span>, <span class="hljs-string" style="color: rgb(230, 219, 116);">'warning'</span>],</p><p>],</p>],
    ],
],</pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">在console下，没有swoole_server的情况下，我们记录下面这样一行代码，看看日志中有没有记录</p><pre class="hljs xml" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);"><p><span class="php"><span class="hljs-preprocessor">&lt;?php</span></span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">namespace</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">console</span>\<span class="hljs-title" style="color: rgb(166, 226, 46);">controllers</span>;</span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">use</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">Yii</span>;</span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">use</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">yii</span>\<span class="hljs-title" style="color: rgb(166, 226, 46);">console</span>\<span class="hljs-title" style="color: rgb(166, 226, 46);">Controller</span>;</span></p><p><span class="php"><span class="hljs-comment" style="color: rgb(117, 113, 94);">/**
 * Test Console Application
 */</span></span></p><span class="php"><span class="hljs-comment" style="color: rgb(117, 113, 94);"> * Test Console Application</span></span><p><span class="php"><span class="hljs-comment" style="color: rgb(117, 113, 94);"> */</span></span></p><p><span class="php"><span class="hljs-class"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">class</span> <span class="hljs-title">TestController</span> <span class="hljs-keyword" style="color: rgb(249, 38, 114);">extends</span> <span class="hljs-title">Controller</span></span>{ &nbsp; &nbsp;</span></p><span class="php"> &nbsp; &nbsp;<span class="hljs-keyword" style="color: rgb(249, 38, 114);">public</span> <span class="hljs-function"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">function</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">actionIndex</span> <span class="hljs-params">()</span>
 &nbsp; &nbsp;</span>{
 &nbsp; &nbsp; &nbsp; &nbsp;yii::warning(<span class="hljs-string" style="color: rgb(230, 219, 116);">"This is a warning message."</span>);
 &nbsp; &nbsp;}
}</span></pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">控制台下输入如下命令执行</p><pre class="hljs bash" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);">./yii <span class="hljs-built_in" style="color: rgb(230, 219, 116);">test</span>/index</pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">执行完之后，我们打开console/runtime/logs/app.log，你会发现该文件内找到有类似下面这样的记录信息</p><pre class="hljs markdown" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);">2017-05-12 22:04:31 [<span class="hljs-link_label">-</span>][<span class="hljs-link_reference">-</span>][<span class="hljs-link_label">-</span>][<span class="hljs-link_reference">warning</span>][<span class="hljs-link_label">application</span>] This is a warning message.</pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">当然也有记录$_SERVER等其他信息。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">现在我们在这段代码中增加swoole的代码，看看结果如何</p><pre class="hljs xml" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);"><p><span class="php"><span class="hljs-preprocessor">&lt;?php</span></span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">namespace</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">console</span>\<span class="hljs-title" style="color: rgb(166, 226, 46);">controllers</span>;</span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">use</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">Yii</span>;</span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">use</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">yii</span>\<span class="hljs-title" style="color: rgb(166, 226, 46);">console</span>\<span class="hljs-title" style="color: rgb(166, 226, 46);">Controller</span>;</span></p><p><span class="php"><span class="hljs-comment" style="color: rgb(117, 113, 94);">/**
* Test Console Application
*/</span></span></p><span class="php"><span class="hljs-comment" style="color: rgb(117, 113, 94);">* Test Console Application</span></span><p><span class="php"><span class="hljs-comment" style="color: rgb(117, 113, 94);">*/</span></span></p><p><span class="php"><span class="hljs-class"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">class</span> <span class="hljs-title">TestController</span> <span class="hljs-keyword" style="color: rgb(249, 38, 114);">extends</span> <span class="hljs-title">Controller</span></span>{ &nbsp; &nbsp;</span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);"> &nbsp; &nbsp; &nbsp;private</span> <span class="hljs-variable" style="color: rgb(230, 219, 116);">$_serv</span>; &nbsp; &nbsp;</span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);"> &nbsp; &nbsp; &nbsp;private</span> <span class="hljs-function"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">function</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">_prepare</span><span class="hljs-params">()</span>
 &nbsp; &nbsp; &nbsp;</span></span>{ &nbsp; &nbsp; &nbsp;</p><p>&nbsp;<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>-&gt;_serv = <span class="hljs-keyword" style="color: rgb(249, 38, 114);">new</span> \Swoole\Server(<span class="hljs-string" style="color: rgb(230, 219, 116);">'127.0.0.1'</span>, <span class="hljs-number" style="color: rgb(174, 129, 255);">9501</span>); &nbsp; &nbsp; &nbsp; &nbsp;</p><p><span class="hljs-variable" style="color: rgb(230, 219, 116);"> &nbsp; &nbsp; &nbsp; &nbsp; $this</span>-&gt;_serv-&gt;set([ <span class="hljs-string" style="color: rgb(230, 219, 116);">'worker_num'</span> =&gt; <span class="hljs-number" style="color: rgb(174, 129, 255);">1</span>,&nbsp;]); &nbsp; &nbsp;</p><p>&nbsp; &nbsp;<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>-&gt;_serv-&gt;on(<span class="hljs-string" style="color: rgb(230, 219, 116);">'Start'</span>, [<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>, <span class="hljs-string" style="color: rgb(230, 219, 116);">'onStart'</span>]); &nbsp; &nbsp; &nbsp;</p><p>&nbsp;<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>-&gt;_serv-&gt;on(<span class="hljs-string" style="color: rgb(230, 219, 116);">'Receive'</span>, [<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>, <span class="hljs-string" style="color: rgb(230, 219, 116);">'onReceive'</span>]); &nbsp; &nbsp; &nbsp;</p><p>&nbsp;<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>-&gt;_serv-&gt;on(<span class="hljs-string" style="color: rgb(230, 219, 116);">'Close'</span>, [<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>, <span class="hljs-string" style="color: rgb(230, 219, 116);">'onClose'</span>]);</p><p><span class="php"> &nbsp; &nbsp;} &nbsp; &nbsp;</span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);"> &nbsp; &nbsp;public</span> <span class="hljs-function"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">function</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">actionStart</span> <span class="hljs-params">()</span><br></span></span></p><p><span class="php"><span class="hljs-function"> &nbsp; &nbsp;</span>{ &nbsp; &nbsp; &nbsp; &nbsp;<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>-&gt;_prepare(); &nbsp; &nbsp; &nbsp;</span></p><p><span class="php"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span class="hljs-variable" style="color: rgb(230, 219, 116);">$this</span>-&gt;_serv-&gt;start();</span></p><p><span class="php"> &nbsp; &nbsp;} &nbsp; </span></p><p><span class="php"> &nbsp; &nbsp;<span class="hljs-keyword" style="color: rgb(249, 38, 114);">public</span> <span class="hljs-function"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">function</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">onStart</span><span class="hljs-params">(<span class="hljs-variable" style="color: rgb(230, 219, 116);">$serv</span>)</span><br></span></span></p><span class="php"><span class="hljs-function"> &nbsp; &nbsp;</span>{
 &nbsp; &nbsp; &nbsp; &nbsp;yii::warning(<span class="hljs-string" style="color: rgb(230, 219, 116);">"This is a warning message."</span>);</span><p><span class="php"> &nbsp; &nbsp;} &nbsp; &nbsp;</span></p><p><span class="php"><span class="hljs-keyword" style="color: rgb(249, 38, 114);"> &nbsp; &nbsp;public</span> <span class="hljs-function"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">function</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">onReceive</span><span class="hljs-params">(<span class="hljs-variable" style="color: rgb(230, 219, 116);">$serv</span>, <span class="hljs-variable" style="color: rgb(230, 219, 116);">$fd</span>, <span class="hljs-variable" style="color: rgb(230, 219, 116);">$fromId</span>, <span class="hljs-variable" style="color: rgb(230, 219, 116);">$data</span>)</span></span></span>{} &nbsp; &nbsp;</p><p><span class="hljs-keyword" style="color: rgb(249, 38, 114);"> &nbsp; &nbsp;public</span> <span class="hljs-function"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">function</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">onClose</span><span class="hljs-params">(<span class="hljs-variable" style="color: rgb(230, 219, 116);">$serv</span>)</span></span>&nbsp;<span class="hljs-function">&nbsp;</span>{}</p><span class="php">}</span></pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">命令行同样以./yii命令运行该脚本，即表示本地9501端口的swoole_server启动了，注意哦，我们在onStart回调内调起了yii::warning，打开日志文件你会发现，没有这条日志，真的什么都没有！其实这条信息有没有呢？有，只是没有到它该刷新出来的时候，很明显我们并不想要这样的结果，怎么办呢？我们可以手动直接把这条信息刷到文件中去。</p><pre class="hljs php" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);"><span class="hljs-variable" style="color: rgb(230, 219, 116);">$logObject</span> = Yii::getLogger();<span class="hljs-variable" style="color: rgb(230, 219, 116);">$logObject</span>-&gt;log(<span class="hljs-string" style="color: rgb(230, 219, 116);">"This is a warning message."</span>, \yii\log\Logger::LEVEL_WARNING);<span class="hljs-variable" style="color: rgb(230, 219, 116);">$logObject</span>-&gt;flush(<span class="hljs-keyword" style="color: rgb(249, 38, 114);">true</span>);</pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">把上面这三行代码，替换掉我们在onStart回调内写的代码试试？</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">看最后一个问题，估计也是你们最关心的问题。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;"><span style="font-weight: 700;">热重启的问题</span></p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">在yii2的console下，不能有效的解决热重启问题，注意我们说的是在console下。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">什么意思呢？</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">我们知道，热重启的实质是重启Worker进程，在Worker进程启动之前加载的文件都不能实现热更新，为了实现热更新，我们需要把被热更新的程序文件，在onWorkerStart回调内重新加载，更新内存中已经被加载过的程序。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">在console中我们仍然可以这样做。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">我们把主要的业务逻辑与控制器类剥离开来，在onWorkerStart中，实例化主要的业务逻辑类，跟我们邮件发送的案例中一致，只不过需要注意命名空间的问题，我们就不再举例了，这样肯定没问题。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">但是为什么我要说yii2的console不能有效的解决热更新呢？</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">首先我们看看在Worker进程之前，都加载了哪些文件，当然这些已经加载过的文件，是不能被重新加载的。</p><pre class="hljs php" style="padding: 0.5em; line-height: 1.42857; color: rgb(248, 248, 242); background: rgb(35, 36, 31);"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">public</span> <span class="hljs-function"><span class="hljs-keyword" style="color: rgb(249, 38, 114);">function</span> <span class="hljs-title" style="color: rgb(166, 226, 46);">onWorkerStart</span><span class="hljs-params">(<span class="hljs-variable" style="color: rgb(230, 219, 116);">$serv</span>, <span class="hljs-variable" style="color: rgb(230, 219, 116);">$workerId</span>)</span></span>{
    print_r(get_included_files());
}</pre><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">运行server之后，我们会在终端界面上看到大概有54个文件被加载了，其中就包括了common和console配置文件以及param和param-local文件，也就是说这些文件，一旦我们修改了，是没有办法实现热重启的，只能重启server。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">这也就是我上面说的，在console下不能完全有效的实现热重启，如果这些你能接受，你觉得没问题，可以，就这么干没任何问题。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">有些人就觉得有瑕疵的代码不好，接受不了，怎么办？</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">我们回顾下为什么会有这个瑕疵，这些提前加载的文件是怎么被加载的呢？如果我们把这些提前加载的文件放到onWorkerStart回调内再加载是不是就可以了避免了呢？</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">事实上可以。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">我们注意到这个瑕疵是因为命令 ./yii 引起的，当我们运行这个命令的时候，实际上也就创建了一个console应用。（可以打开根目录下的yii文件一探究竟）</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">为了避免这个问题，我们转换思路，摒弃console，重新拾起 php xxx.php的执行方式，把需要自动加载的类文件以及components的初始化工作放在onWorkerStart回调内去处理即可。</p><p style="margin-top: 0.8em; margin-bottom: 0.8em; line-height: 1.8; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, &quot;Arial sans-serif&quot;; font-size: 14px; white-space: normal;">关于swoole的基础，我们就先介绍这么多，有任何问题，尽量文章下留言哦，有好的意见也欢迎大家的反馈，谢谢。哦对了，关于swoole的学习，你可不能偷懒哦，正所谓师傅领进门，修行在个人，后面还需要多看文档，多做总结，多写实例。</p><p><br></p>
						</div>
					</article>
					<div class="widget wid-related">
						<div class="heading"><h4>Related Post</h4></div>
						<div class="content">
							<div class="row">
								<div class="col-md-4">
									<div class="wrap-col">
										<a href="#"><img src="/images/7.jpg" /></a>
										<h4><a href="#">Vero eros et accumsan et iusto odio </a></h4>
									</div>
								</div>
								<div class="col-md-4">
									<div class="wrap-col">
										<a href="#"><img src="/images/8.jpg" /></a>
										<h4><a href="#">Vero eros et accumsan et iusto odio </a></h4>
									</div>
								</div>
								<div class="col-md-4">
									<div class="wrap-col">
										<a href="#"><img src="/images/6.jpg" /></a>
										<h4><a href="#">Vero eros et accumsan et iusto odio </a></h4>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
	</div>